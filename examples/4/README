# Exercise 4: Connecting to an API

## How to start:
- Run `npm start` inside the `hello-website` folder to run the React development server. This will launch your application in your browser automatically.
- Open the `hello-website` folder in order to find all the code relevant to this exercise.
- Note: This is also a development server.

## Requirements:
- Your application should present some dynamic title text that starts out as `"Welcome to the three bear's house"`.
- Your application should present a button that says `"Goldilocks is coming"` that when pressed launches an API call.
- You application should present the text `"PROCESSING..."` as the title while processing the API call.
- This API call should make a request of type GET, to Fuck Off As A Service - https://www.foaas.com/ using their /off/:name/:from API and should return `"Fuck off, Goldilocks."` as the `message` value and `"Three Little Bears"` as the `subtitle` value. You should make use of their JSON (JavaScript Object Notation) API.
- You should concate these segments to preset `"Fuck off, Goldilocks. - Three Little Bears"` using JavaScript's template notation.
- Your application should present a second button that says `"Reset title text"` and resets the title text to the default `"Welcome to the three bear's house"` value.

## Steps:
1. Open `text.action.js` in the `actions` folder and follow instructions.
2. Open `text.reducer.js` in the `reducers` folder and follow instructions.
3. Open the `App.jsx` component in the root folder and follow instructions.
4. Open the `Content.jsx` component and follow instructions.
5. Open `apiRequest.middleware.js` in the `middleware` folder and follow instructions.

Congratulations on completing our workshop!
You can try adding other API calls or actions as you desire if you still have time. Welcome to the world of frontend! :)

## Context
- Check out how we have added a new middleware to our Redux setup called `apiRequest.middleware.js` in `index.js`.
- We've setup another `create-react-app` application for you in the hello-website folder using the command `npx create-react-app hello-website`.
- Like exercise 3 we've removed the default rotating logo header but this time we won't have a menu.
- Like exercise 3 we have renamed all the file extensions to .jsx instead of .js (except elements connected to Redux), we've installed `redux` and `react-redux` for access to Redux, it's React bindings and React Router for ReactDOM, we've added some boilerplate code ready for you to make things a little quicker and we've installed and configured `redux-logger` and `redux-devtools-extension` for easier development with Redux (let's just say that copy-paste was helpful here).